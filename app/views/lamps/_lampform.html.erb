<div class="lamp">
	<%= form_for([lamp.bridge, lamp], url: settings_bridge_lamp_path(lamp.bridge, lamp), html: { method: 'GET', class: "on_off"}, remote: true)  do |f| %>
	  <%= f.hidden_field :command, value: "#{lamp.on ? 'turn_off' : 'turn_on'}", class: "submit_hidden_value" %>
	  <%= f.submit "Turn #{lamp.say_on_off}?", class: "tiny button radius" %>
	<% end %>

	<%= form_for([lamp.bridge, lamp], url: settings_bridge_lamp_path(lamp.bridge, lamp), html: { method: 'GET', class: "colorloop"}, remote: true)  do |f| %>
	  <%= f.hidden_field :command, value: "#{lamp.effect == 'colorloop' ? 'turn_colorloop_off' : 'turn_colorloop_on'}" %>
	  <%= f.submit "Turn colorloop #{lamp.say_colorloop}?", class: "tiny button radius" %>
	<% end %>

	<%= form_for([lamp.bridge, lamp], url: settings_bridge_lamp_path(lamp.bridge, lamp), html: {method: 'GET', class: "brightness"})  do |f| %>
	  <div class="slider-input ui-slider ui-slider-horizontal ui-widget ui-widget-content ui-corner-all">
	  </div>
	  <%= f.hidden_field(:command, value: "adjust_brightness", data: {brightness: lamp.brightness, bridge_id: "#{lamp.bridge.id}", lamp_id: "#{lamp.id}"}, class: "brightvalue") %>
	  <%= f.submit "Set Brightness to", class: "tiny button radius" %>
	<% end %>

	<%= form_for([lamp.bridge, lamp], url: settings_bridge_lamp_path(lamp.bridge, lamp), html: {method: 'GET', class: "brightness"})  do |f| %>
		
		<div class="colorpicker"><form><input type="hidden" class="color" name="color" value="#123456" /></form></div>

	<% end %>
</div>